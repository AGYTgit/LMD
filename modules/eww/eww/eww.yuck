(defwindow hyprbar :class "hyprbar"
	:monitor 1
	:geometry (geometry :anchor "center left" :x "0px" :y "0px" :width "64px" :height "1080px")
	:exclusive "true"


	(box :orientation "v" :space-evenly true
		(box :class "hyprbar-left" :valign "start" :orientation "v" :space-evenly false
            (menu)
            (box :class "workspace_widget" :orientation "h" :space-evenly false :valign "end" :halign "center"
                (workspaces :workspace-lis workspaces-primary-lis)
                (workspaces :workspace-lis workspaces-secondary-lis)
            )
		)
		(box :class "hyprbar-center" :valign "center"
		)
		(box :class "hyprbar-right" :valign "end"
            (box :orientation "v" :space-evenly false
                (battery)
                (separator)
                (clock)
                (separator)
                (date)
            )
		)
	)
)

(deflisten workspaces-primary-lis :initial "[]" "zsh scripts/get-workspaces.sh 'eDP-1' 1 0")
(deflisten workspaces-secondary-lis :initial "[]" "zsh scripts/get-workspaces.sh 'HDMI-A-1' 1 0")
(defwidget workspaces [workspace-lis]
	(box :orientation "v" :halign "center" :valign "end"
		(for workspace in workspace-lis
			(image :class "workspace-entry ${workspace.active ? 'active' : 'inactive'}"
				:image-width 11
				:path "assets/workspaces/circle-${workspace.windows > 4 ? 4 : workspace.windows}.png"
			)
		)
	)
)

(defwidget separator []
	(label :text "-" :class "separator-line")
)

(defpoll BATTERY :interval "10s" `cat /sys/class/power_supply/BAT1/capacity`)
(defwidget battery []
	(box :class "battery" :orientation "h" :space-evenly false :halign "center"
		(box
			(label :text BATTERY)
		)
	)
)

(defpoll TIME :interval "1s" `date +\"%I
%M"`)
(defwidget clock []
	(box :class "clock" :orientation "h" :space-evenly false :halign "center"
		(box
			(label :text TIME)
		)
	)
)

(defpoll DATE :interval "1s" `date +\"%d
%m"`)
(defwidget date []
	(box :class "date" :orientation "h" :space-evenly false :halign "center"
		(box
			(label :text DATE)
		)
	)
)

(defwidget menu []
	(box :class "menu" :orientation "h" :space-evenly false :halign "center"
		(image :image-width 24
			:path "assets/snowflake.png"
		)
	)
)
